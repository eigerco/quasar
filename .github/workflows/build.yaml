name: Build

on:
  push:
    branches: ["main"]
    # Publish semver tags as releases.
    tags: ["v*.*.*"]
  pull_request:
    branches: ["main"]

jobs:
  pull_docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: mkdir -p ~/image-cache

      - id: image-cache
        uses: actions/cache@v1
        with:
            path: ~/image-cache
            # add soroban dev version
            key: image-cache-${{ runner.os }}

      - if: steps.image-cache.outputs.cache-hit != 'true'
        run: |
            docker pull stellar/quickstart:soroban-dev
            docker save -o ~/image-cache/stellar.tar stellar/quickstart:soroban-dev
            docker pull postgres
            docker save -o ~/image-cache/postgres.tar postgres

  build:
    needs: pull_docker
    timeout-minutes: 10
    permissions:
      contents: read
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.72.0
      - name: Check default features
        uses: actions-rs/cargo@v1
        with:
          command: check
      - name: Check all features
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-features
      - id: image-cache
        uses: actions/cache@v1
        with:
            path: ~/image-cache
            key: image-cache-${{ runner.os }}
      - name: Load docker images
        run: |
            docker load -i ~/image-cache/stellar.tar
            docker load -i ~/image-cache/postgres.tar
      - name: Copy config file
        run: cp config/config.toml.example config/config.toml
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features
      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features
      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
